# ==========================
# ===  General settings  ===
# ==========================

# Change default prefix: 'C-b' ~> 'C-a'
unbind C-b
set -g prefix C-a

set -g mouse on
set -g xterm-keys on
set -g history-limit 50000
set -g default-terminal "screen-256color" # setup correct term in tmux: 256 colors terminal
set -s escape-time 50 # lower escape timing (50ms) - quicker response to scroll-buffer access
set -g base-index 1 # set first window to index 1 (not 0) to map more to the keyboard layout
set -g renumber-windows on
set -g status-interval 1 # update status bar every second, instead of default timeout (15 sec)

# Window Status Formatting
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'


# ==========================
# ===   Key bindings     ===
# ==========================

unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind &    # kill-window
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left

bind r source-file ~/.tmux.conf \; display "Config reloaded!" # quick `source-file` reloading inside tmux session
bind c new-window -c "#{pane_current_path}" # new window and retain cwd

# edit configuration and reload
bind e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Split panes
bind h split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D


# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================

# Prefer vi style key table
#setw -g mode-keys vi

bind p paste-buffer
bind C-p choose-buffer
bind -n M-Up copy-mode # trigger copy mode by

# Reduce number of scrolled rows per tick to "2" (default is 5) when scrolling with mouse wheel
bind -T copy-mode-vi WheelUpPane select-pane \;\
    send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \;\
    send-keys -X -N 2 scroll-down

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# TODO: Use non-specifix system clipboard
yank="pbcopy"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane select-pane \;\
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
    send-keys -X clear-selection

# ================================================
# ===     Tmux interface customization         ===
# ================================================

setw -g window-status-separator " | "
setw -g window-status-bell-style fg=red,default
separator_powerline_left="► "
separator_powerline_right=" ◄"

# Statusbar Color Palatte
set -g status-style default
set -g status-style bg=black
set -g status-style fg=brightgreen
set -g status-left-length 40
set -g status-right-length 80
set -g status-position top
set -g status-justify left

# pane border
set -g pane-border-style bg=black
set -g pane-border-style fg=white
set -g pane-active-border-style fg=brightgreen

# Messagj Color Palette
set -g message-style bg=green
set -g message-style fg=brightred

# Window Status Color Palette
setw -g window-status-style fg=brightblue
setw -g window-status-style bg=default
setw -g window-status-style dim

# active window title colors
setw -g window-status-current-style fg=brightred
setw -g window-status-current-style bg=default
setw -g window-status-current-style bright

setw -g window-status-activity-style default
setw -g window-status-activity-style fg=brightgreen
